[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A configuration class called `CorsConfig` that sets up cross-origin resource sharing (CORS) policies for a Spring web application. The configuration adds CORS mappings to a registry, allowing requests from any origin, method, and headers, and enabling credentials for authentication. The `addCorsMappings()` method is used to add the mapping configuration to the registry.",
        "items": [
          {
            "id": "b72a0146-521e-d181-9141-61195a7b1be4",
            "ancestors": [],
            "description": "Is a configuration class that sets up CORS mappings for cross-origin resource sharing. It allows requests from any origin and specifies which methods, headers, and credentials are allowed. The class also enables credentials for authentication.",
            "name": "CorsConfig",
            "location": {
              "start": 8,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 44,
            "docLength": null
          },
          {
            "id": "1831bb7a-2813-ec9a-e24d-2dcfca76c5a1",
            "ancestors": [
              "b72a0146-521e-d181-9141-61195a7b1be4"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin, method, and headers, and enabling credentials for authentication.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a set of CORS mappings that allow requests from any origin, method, and headers, and enable credentials for authentication.\n\n* `allowedOrigins`: The list of origins that are allowed to make requests to the application.\n* `allowedMethods`: The list of HTTP methods that are allowed to be used in requests from originated sources.\n* `allowedHeaders`: The list of headers that are allowed to be used in requests from originated sources.\n* `exposedHeaders`: The list of headers that are exposed in responses to clients.\n* `allowCredentials`: Whether credentials (e.g., cookies, authorization headers) are allowed for authentication purposes.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "import org.springframework.context.annotation.Bean;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class Example {\n    @Value(\"${server.cors.allowedOrigins}\")\n    private String[] allowedOrigins;\n\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return new WebMvcConfigurer() {\n            /**\n             * Adds CORS mappings to a registry, allowing requests from any origin and specifying\n             * which methods, headers, and credentials are allowed.\n             * \n             * @param registry CorsRegistry object that is being updated with mapping configuration\n             * for cross-origin resource sharing (CORS) policies.\n             */\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping(\"/**\")\n                        .allowedOrigins(allowedOrigins)\n                        .allowedMethods(\"*\")\n                        .allowedHeaders(\"*\")\n                        .exposedHeaders(\"token\", \"userId\")\n                        .allowCredentials(true);\n            }\n        };\n    }\n}\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "location": {
              "start": 28,
              "insert": 13,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 12,
                "end": 27
              }
            },
            "item_type": "method",
            "length": 23,
            "docLength": 15
          },
          {
            "id": "121c1849-c4c3-26bb-134d-d7fcc67ff13d",
            "ancestors": [
              "b72a0146-521e-d181-9141-61195a7b1be4",
              "1831bb7a-2813-ec9a-e24d-2dcfca76c5a1"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin and specifying which methods, headers, and credentials are allowed.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry that is being updated with the mapping configurations.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n    public void configure(HttpSecurity http) throws Exception {\n        http.cors().and()\n            .authorizeRequests()\n                .anyRequest().authenticated();\n    }\n",
              "description": "\nIn this example, the method addCorsMappings is used to add a mapping for cross-origin resource sharing (CORS) policies. The method takes an argument of type CorsRegistry which is updated with the specified mapping for cross-origin resource sharing (CORS) policies. In this case, the method adds a mapping for any origin, method, and headers that are allowed for making requests, and enables credentials for authentication.\nIt should be noted that this is just an example and may not be the actual use of the method in your code."
            },
            "name": "addCorsMappings",
            "location": {
              "start": 40,
              "insert": 33,
              "offset": " ",
              "indent": 6,
              "comment": {
                "start": 32,
                "end": 39
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 7
          }
        ]
      }
    }
  }
]