[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A CorsConfig class that is used to configure CORS settings for a Spring web application. The class uses the @Configuration annotation and the @Bean method to create a WebMvcConfigurer instance that adds CORS mappings to a registry, allowing requests from any origin and specifying which methods, headers, and credentials are allowed. Specifically, the code allows any origin to make any request method (GET, POST, etc.) with any headers and credentials, including a token and user ID.",
        "items": [
          {
            "id": "f6eceff5-2b5e-a89d-6042-a4f4410886ff",
            "ancestors": [],
            "description": "Defines a configuration for enabling Cross-Origin Resource Sharing (CORS) in a Spring Web MVC application. The class provides a method to add CORS mappings to a registry, allowing requests from any origin and specifying which methods, headers, and credentials are allowed. The allowed origins can be specified using the `@Value` annotation, while the `addCorsMappings()` method adds the mappings to a registry.",
            "name": "CorsConfig",
            "location": {
              "start": 8,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 28,
            "docLength": null
          },
          {
            "id": "8929e80c-ccde-6a82-5f41-aa115c2fcf77",
            "ancestors": [
              "f6eceff5-2b5e-a89d-6042-a4f4410886ff"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin and specifying which methods, headers, and credentials are allowed.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a configuration for CORS mappings that allows requests from any origin and specifies which methods, headers, and credentials are allowed.\n\n* `registry`: The Cors registry that is being updated with the specified mapping.\n* `allowedOrigins`: A list of origins allowed to make requests.\n* `allowedMethods`: A list of HTTP methods allowed for making requests.\n* `allowedHeaders`: A list of headers allowed to be accessed in responses.\n* `exposedHeaders`: A list of headers that are exposed in responses.\n* `allowCredentials`: Whether credentials (e.g., cookies, authorization headers) are allowed or not.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      \n      /**\n       * Adds CORS mappings to a registry, allowing requests from any origin and specifying\n       * which methods, headers, and credentials are allowed.\n       * \n       * @param registry Cors registry that is being updated with the specified mapping.\n       */\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "location": {
              "start": 13,
              "insert": 13,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 22,
            "docLength": null
          },
          {
            "id": "77b7a1fe-7d83-ac9a-2d40-7e0b9eba70d0",
            "ancestors": [
              "f6eceff5-2b5e-a89d-6042-a4f4410886ff",
              "8929e80c-ccde-6a82-5f41-aa115c2fcf77"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin, method, and headers, and enabling credentials for authentication.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "CorsRegistry object that is being updated with mapping configuration for cross-origin resource sharing (CORS) policies.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@RestController\npublic class MyController {\n    @Value(\"${server.cors.allowedOrigins}\")\n    private String[] allowedOrigins;\n\n    @GetMapping(\"/my-resource\")\n    public ResponseEntity<String> myResource() {\n        return new ResponseEntity<>(\"Hello, World!\", HttpStatus.OK);\n    }\n}\n",
              "description": "\nThe `addCorsMappings` method is called in the MyController class with a registry parameter of type CorsRegistry and an allowedOrigins parameter that specifies a list of origins that are allowed to access the resource."
            },
            "name": "addCorsMappings",
            "location": {
              "start": 24,
              "insert": 18,
              "offset": " ",
              "indent": 6,
              "comment": {
                "start": 17,
                "end": 23
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 6
          }
        ]
      }
    }
  }
]