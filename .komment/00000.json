[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A Spring configuration class called `CorsConfig` that adds CORS mappings to a registry for cross-origin resource sharing (CORS). The `addCorsMappings()` method maps any origin to allow all methods and headers, and specifies whether credentials should be allowed or not. The `WebMvcConfigurer` interface is used to configure the CORS registry.",
        "items": [
          {
            "id": "4c3a02ca-2236-ada6-4d4a-1f4f874c04ae",
            "ancestors": [],
            "description": "Defines a configuration class for cross-origin resource sharing (CORS) using Spring WebMvcConfigurer. The class has a single method, `addCorsMappings`, which adds mappings to a registry allowing requests from any origin and specifying allowed methods, headers, and credentials.",
            "name": "CorsConfig",
            "location": {
              "start": 8,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 46,
            "docLength": null
          },
          {
            "id": "7b652711-1def-fca0-9241-432700f7bdc0",
            "ancestors": [
              "4c3a02ca-2236-ada6-4d4a-1f4f874c04ae"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin and specifying which methods, headers, and credentials are allowed.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a CorsRegistry object containing mappings for cross-origin resource sharing, allowing requests from any origin and specifying allowed methods, headers, and credentials.\n\n* `registry`: This is an instance of `CorsRegistry`, which contains mappings of allowed origins, methods, headers, and credentials for cross-origin resource sharing (CORS).\n* `allowedOrigins`: A list of allowed origins that are allowed to make requests to the server.\n* `allowedMethods`: A list of HTTP methods (such as GET, POST, PUT, DELETE, etc.) that are allowed to be used in CORS requests.\n* `allowedHeaders`: A list of headers that are allowed to be used in CORS requests.\n* `exposedHeaders`: A list of headers that are exposed to the client in the response.\n* `allowCredentials`: A boolean value indicating whether credentials (such as cookies, authorization tokens, etc.) are allowed to be included in CORS requests.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Configuration\npublic class AppConfig {\n  @Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(\"http://localhost:8080\", \"https://myhome.com\")\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n}\n",
              "description": "\nIn this example, the method corsConfigurer is called from AppConfig, which is a configuration class. The method returns a WebMvcConfigurer instance that contains mappings for allowed origins, methods, headers, and credentials for cross-origin resource sharing (CORS) in the specified function. In this case, the mappings are applied to all routes (\"/**\")."
            },
            "name": "corsConfigurer",
            "location": {
              "start": 29,
              "insert": 13,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 12,
                "end": 28
              }
            },
            "item_type": "method",
            "length": 24,
            "docLength": 16
          },
          {
            "id": "4a820d4e-4f90-8cb4-a047-b18ddfa06b9c",
            "ancestors": [
              "4c3a02ca-2236-ada6-4d4a-1f4f874c04ae",
              "7b652711-1def-fca0-9241-432700f7bdc0"
            ],
            "description": "Adds CORS mappings to a registry, allowing specified origins to make requests to the server with specific methods and headers, while also exposing two custom headers.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry that the `addCorsMappings()` method adds mappings to.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "public class Example {\n    public static void main(String[] args) {\n        CorsRegistry registry = new CorsRegistry();\n        \n        // Add a mapping for any origin, allowing any HTTP method, header, and credentials.\n        addCorsMappings(registry);\n    }\n}\n",
              "description": ""
            },
            "name": "addCorsMappings",
            "location": {
              "start": 42,
              "insert": 34,
              "offset": " ",
              "indent": 6,
              "comment": {
                "start": 33,
                "end": 41
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 8
          }
        ]
      }
    }
  }
]