[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A `CorsConfig` class that configures CORS (Cross-Origin Resource Sharing) for a web application. The `CorsConfig` class uses Spring Boot's `@Configuration` annotation and provides a `WebMvcConfigurer` bean that adds CORS mappings to the application. The `addCorsMappings()` method defines which origins are allowed to make requests to the application, as well as which HTTP methods and headers are allowed. Additionally, the `exposedHeaders()` method specifies which headers should be included in responses.",
        "items": [
          {
            "id": "6ada8bc4-5d56-239b-b94b-d6234acedc70",
            "ancestors": [],
            "type": "function",
            "description": "Defines configuration for Cross-Origin Resource Sharing (CORS) in a Spring Web MVC application. It sets up mappings for allowing origins to access specific resources, methods, headers, and credentials. The configuration is applied using the `addCorsMappings()` method of the `CorsRegistry` interface.",
            "name": "CorsConfig",
            "length": 22,
            "location": {
              "start": 9,
              "insert": 9,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "docLength": null
          },
          {
            "id": "6a786b7b-cc7d-828a-b147-5dde45bc1a81",
            "ancestors": [
              "6ada8bc4-5d56-239b-b94b-d6234acedc70"
            ],
            "type": "function",
            "description": "Defines CORS mappings for a web application, allowing requests from specified origins and methods, and exposing certain headers.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a configuration for CORS (Cross-Origin Resource Sharing) that allows requests from any origin to be made to the server.\n\n* `allowedOrigins`: an array of URLs that are allowed to make requests to the application's endpoints.\n* `allowedMethods`: an array of HTTP methods (e.g., GET, POST, DELETE) that are allowed to be used by requesters from allowed origins.\n* `allowedHeaders`: an array of headers that are allowed to be used in requests from allowed origins.\n* `exposedHeaders`: an array of headers that the application wants to expose to requesters.\n* `allowCredentials`: a boolean indicating whether request credentials (e.g., authentication tokens) should be included in the CORS response.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class MyConfig {\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return new WebMvcConfigurer() {\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping(\"/**\")\n                    .allowedOrigins(\"http://localhost:8081\")\n                    .allowedMethods(\"GET\", \"POST\", \"PUT\", \"DELETE\")\n                    .allowedHeaders(\"*\")\n                    .exposedHeaders(\"token\", \"userId\")\n                    .allowCredentials(true);\n            }\n        };\n    }\n}\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "length": 16,
            "location": {
              "start": 14,
              "insert": 14,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "docLength": null
          },
          {
            "id": "9c4888d7-64f8-3b80-1847-16916a431aac",
            "ancestors": [
              "6ada8bc4-5d56-239b-b94b-d6234acedc70",
              "6a786b7b-cc7d-828a-b147-5dde45bc1a81"
            ],
            "type": "function",
            "description": "Adds CORS mappings to a registry, allowing requests from any origin and including specific headers and methods.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry that is being updated with the mapping configuration.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Configuration\npublic class MyConfig {\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return new WebMvcConfigurer() {\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping(\"/**\")\n                    .allowedOrigins(new String[]{\"*\", \"https://example.com\"})\n                    .allowedMethods(\"GET\", \"POST\", \"PUT\", \"DELETE\")\n                    .allowedHeaders(\"*\");\n            }\n        };\n    }\n}\n",
              "description": "\nIn the example above, a WebMvcConfigurer bean is defined that adds a CorsMapping to all endpoints. The allowedOrigins are set to \"*\", which allows requests from any origin, and \"https://example.com\" which allows requests from a specific domain. The allowedMethods are set to GET, POST, PUT, DELETE, which allows those HTTP methods for all endpoints. The allowedHeaders is set to \"*\", which allows all headers in the request."
            },
            "name": "addCorsMappings",
            "length": 9,
            "location": {
              "start": 19,
              "insert": 19,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "method",
            "docLength": null
          }
        ]
      }
    }
  }
]