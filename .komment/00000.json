[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A CorsConfig class that configures cross-origin resource sharing (CORS) for a Spring MVC web application. The class sets up mapping rules in a Cors registry, allowing requests from any origin and specifying allowed methods, headers, and credentials. Specifically, the addCorsMappings method adds a mapping to the Cors registry for any URL, allowing requests from any origin and specifying allowed methods, headers, and credentials.",
        "items": [
          {
            "id": "5de73311-a5d4-ae93-fc46-30ad86be17c1",
            "ancestors": [],
            "description": "Allows for the configuration of cross-origin resource sharing (CORS) rules for a Spring MVC application. The class provides a method to add mapping rules to a Cors registry, allowing specific origins, methods, headers, and credentials for a given resource. The class also provides a Bean annotation for creating a WebMvcConfigurer object that can be used to add CORS mapping rules to the registry.",
            "name": "CorsConfig",
            "location": {
              "start": 9,
              "insert": 9,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 45,
            "docLength": null
          },
          {
            "id": "0a30d740-1a15-07a5-aa43-6db8bc71feca",
            "ancestors": [
              "5de73311-a5d4-ae93-fc46-30ad86be17c1"
            ],
            "description": "Adds CORS mappings to allow requests from any origin, specifying allowed methods, headers, and credentials.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a mapping to the CORS registry, allowing requests from any origin with specific allowed methods, headers, and credentials.\n\n* `registry`: The Cors registry to which the mappings are being added.\n* `allowedOrigins`: An array of allowed origins for CORS requests.\n* `allowedMethods`: A string of allowed HTTP methods for CORS requests.\n* `allowedHeaders`: A string of allowed headers for CORS requests.\n* `exposedHeaders`: An array of exposed headers for CORS requests.\n* `allowCredentials`: A boolean value indicating whether credentials (e.g., cookies, authorizations) are allowed for CORS requests.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Configuration\npublic class ApplicationConfig {\n  @Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(Arrays.asList(\"http://localhost:3000\"))\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n}\n",
              "description": "\nIn this example, the method corsConfigurer is called in the ApplicationConfig class and returns a new instance of WebMvcConfigurer. The addCorsMappings method is then used to define CORS mappings for the application."
            },
            "name": "corsConfigurer",
            "location": {
              "start": 31,
              "insert": 14,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 13,
                "end": 30
              }
            },
            "item_type": "method",
            "length": 22,
            "docLength": 17
          },
          {
            "id": "8425aece-3f8d-5cb8-d448-84df030fd604",
            "ancestors": [
              "5de73311-a5d4-ae93-fc46-30ad86be17c1",
              "0a30d740-1a15-07a5-aa43-6db8bc71feca"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin and specifying allowed methods, headers, and credentials.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "CorsRegistry object that contains the mappings for cross-origin resource sharing (CORS) policies.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\npublic void addCorsMappings(CorsRegistry registry) {\n  registry.addMapping(\"/**\")\n    .allowedOrigins(Arrays.asList(\"*\"))\n    .allowedMethods(\"*\")\n    .allowedHeaders(\"*\")\n    .exposedHeaders(\"token\", \"userId\")\n    .allowCredentials(true);\n}\n",
              "description": "\nThis is an example input for the method addCorsMappings, which consists of a CorsRegistry object with mappings for cross-origin resource sharing (CORS). The registry has been modified by adding mapping rules that allow any origin to access any resources on the server. Additionally, it specifies that all methods can be used when accessing the resources and allows any headers to be used."
            },
            "name": "addCorsMappings",
            "location": {
              "start": 42,
              "insert": 36,
              "offset": " ",
              "indent": 6,
              "comment": {
                "start": 35,
                "end": 41
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 6
          }
        ]
      }
    }
  }
]