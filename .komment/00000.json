[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "",
        "items": [
          {
            "id": "91ab16d8-40a3-413b-9455-37459f1dcdbd",
            "ancestors": [],
            "type": "function",
            "name": "addCorsMappings",
            "location": {
              "offset": " ",
              "indent": 6,
              "insert": 18,
              "start": 18
            },
            "returns": false,
            "params": [
              {
                "name": "registry",
                "type": "CorsRegistry"
              }
            ],
            "skip": false,
            "docLength": null,
            "length": 9,
            "comment": {
              "description": "Adds CORS mappings to the registry, allowing incoming requests from any origin, methods, headers, and credentials.",
              "params": [
                {
                  "name": "registry",
                  "type": "CorsRegistry",
                  "description": "Cors registry that is being updated with new mapping configurations for handling Cross-Origin Resource Sharing (CORS) requests."
                }
              ],
              "returns": null
            }
          }
        ]
      }
    }
  },
  {
    "name": "_test_1.js",
    "path": "_test_1.js",
    "content": {
      "structured": {
        "description": "",
        "items": [
          {
            "id": "bee9f123-7176-4cf8-9e63-d860cdade156",
            "ancestors": [],
            "type": "function",
            "name": "search",
            "location": {
              "offset": " ",
              "indent": 0,
              "insert": 2,
              "start": 2
            },
            "params": [
              {
                "name": "arr",
                "value": null,
                "type": null
              },
              {
                "name": "x",
                "value": null,
                "type": null
              },
              {
                "name": "start",
                "value": null,
                "type": null
              },
              {
                "name": "end",
                "value": null,
                "type": null
              }
            ],
            "returns": true,
            "skip": false,
            "jsx": false,
            "docLength": null,
            "length": 10,
            "comment": {
              "description": "Searches for an element `x` in a given array `arr` within a specified range `start` to `end`. It returns `true` if `x` is found, otherwise it recursively calls itself until the end of the array is reached.",
              "params": [
                {
                  "name": "arr",
                  "type": "array",
                  "value": null,
                  "description": "array whose elements are being searched for the specified value `x`."
                },
                {
                  "name": "x",
                  "type": "number",
                  "value": null,
                  "description": "value being searched for in the array."
                },
                {
                  "name": "start",
                  "type": "number",
                  "value": null,
                  "description": "index of the leftmost element in the array that should be searched for the specified value `x`."
                },
                {
                  "name": "end",
                  "type": "number",
                  "value": null,
                  "description": "2nd index of the array to be searched, indicating the last index at which the search should stop."
                }
              ],
              "returns": {
                "type": "boolean",
                "description": "a boolean value indicating whether the target element is present in the array."
              }
            }
          },
          {
            "id": "333a6726-366d-41ed-b47d-73225b6724e8",
            "ancestors": [],
            "type": "function",
            "name": "getApplicationID",
            "location": {
              "offset": " ",
              "indent": 0,
              "insert": 14,
              "start": 14
            },
            "params": [],
            "returns": true,
            "skip": false,
            "jsx": false,
            "docLength": null,
            "length": 10,
            "comment": {
              "description": "Retrieves the application ID from a parameter or a database based on the provided name.",
              "params": [],
              "returns": {
                "type": "integer",
                "description": "a unique identifier for an application."
              }
            }
          },
          {
            "id": "a501f658-0bd5-4ad8-b858-bb6404744df1",
            "ancestors": [],
            "type": "function",
            "name": "newGeneration",
            "location": {
              "offset": " ",
              "indent": 0,
              "insert": 25,
              "start": 25
            },
            "params": [
              {
                "name": "cells",
                "value": null,
                "type": null
              }
            ],
            "returns": true,
            "skip": false,
            "jsx": false,
            "docLength": null,
            "length": 26,
            "comment": {
              "description": "Takes an array of cells as input, where each cell represents the state (alive or dead) of a cell in a grid. The function generates a new generation of cells based on the current generation and neighboring cells' states.",
              "params": [
                {
                  "name": "cells",
                  "type": "array",
                  "value": null,
                  "description": "2D grid of cells to be simulated, and each row of the grid contains the state of the cell (alive or dead) as a binary number."
                }
              ],
              "returns": {
                "type": "array",
                "description": "an array of alive cells in the next generation, generated based on the given cells."
              }
            }
          }
        ]
      }
    }
  }
]