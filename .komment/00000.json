[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A Spring Boot configuration class named \"CorsConfig\" that enables Cross-Origin Resource Sharing (CORS) for a web application. The class uses the @Configuration annotation and the @Bean annotation to define a WebMvcConfigurer bean that configures CORS settings for the application. The CORS settings allow origins, methods, headers, and credentials to be allowed or denied. The configuration class also defines an array of allowed origins using the @Value annotation.",
        "items": [
          {
            "id": "7aa87377-6ef4-0cbd-d248-9f0dcbfb2ffb",
            "ancestors": [],
            "description": "Configures cross-origin resource sharing (CORS) settings for a web application. The class allows origins specified in the configuration file to access resources with specific methods, headers, and credentials enabled. The allowed origins are defined using a String array.",
            "name": "CorsConfig",
            "location": {
              "start": 9,
              "insert": 9,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 20,
            "docLength": null
          },
          {
            "id": "fb666990-9710-d8b3-5d46-57b30d065956",
            "ancestors": [
              "7aa87377-6ef4-0cbd-d248-9f0dcbfb2ffb"
            ],
            "description": "Adds CORS mappings for all routes in the application, allowing requests from any origin and specifying which methods, headers, and credentials are allowed.",
            "params": [],
            "returns": {
              "type_name": "instance",
              "description": "a configuration for enabling CORS (Cross-Origin Resource Sharing) on a web application, allowing requests from specified origins and methods.\n\n* `allowedOrigins`: An array of strings representing the origins allowed to access the resource.\n* `allowedMethods`: An array of strings representing the HTTP methods allowed for the resource.\n* `allowedHeaders`: An array of strings representing the headers allowed for the resource.\n* `exposedHeaders`: An array of strings representing the headers that are exposed in the response.\n* `allowCredentials`: A boolean value indicating whether credentials (e.g., authentication tokens) are allowed to be included in the request.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n",
              "description": "\nIn this example, we are defining a bean that implements the WebMvcConfigurer interface. The addCorsMappings method is being overridden to define a mapping for all paths (\"/**\"). We are then setting allowedOrigins, allowedMethods, and allowedHeaders to their respective values from the application configuration properties file, as well as exposedHeaders and allowCredentials.\nThe corsConfigurer method is then registered as a bean in Spring's IoC container, which means that it will be automatically detected and used by Spring when the application is run."
            },
            "name": "corsConfigurer",
            "location": {
              "start": 14,
              "insert": 14,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 14,
            "docLength": null
          },
          {
            "id": "087fa8a1-1df7-24b5-ee42-6fedeb79b484",
            "ancestors": [
              "7aa87377-6ef4-0cbd-d248-9f0dcbfb2ffb",
              "fb666990-9710-d8b3-5d46-57b30d065956"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin and specifying which HTTP methods, headers, and credentials are allowed for those requests.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "CorsRegistry object to which the mappings will be added.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n    }\n",
              "description": ""
            },
            "name": "addCorsMappings",
            "location": {
              "start": 17,
              "insert": 17,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "method",
            "length": 9,
            "docLength": null
          }
        ]
      }
    }
  }
]