[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A CorsConfig class that configures Cross-Origin Resource Sharing (CORS) for a web application. The class uses Spring packages and annotations to define mapping rules for allowing specific origins, methods, headers, and credentials for accessing resources on the server. The `addCorsMappings()` method adds these mappings to a registry, which can then be used by web applications to make CORS requests.",
        "items": [
          {
            "id": "fd1d77a9-9ef1-ae8d-1449-c5b5b69b3995",
            "ancestors": [],
            "description": "Defines a configuration for Cross-Origin Resource Sharing (CORS) that allows requests from any origin to access resources on the server. The configuration sets allowed origins, methods, headers, and credentials for a given resource. Additionally, it exposes specific headers for authentication tokens and user IDs.",
            "name": "CorsConfig",
            "location": {
              "start": 9,
              "insert": 9,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 43,
            "docLength": null
          },
          {
            "id": "ecdab47f-6b1e-a292-ed4e-8508fb8e4eb0",
            "ancestors": [
              "fd1d77a9-9ef1-ae8d-1449-c5b5b69b3995"
            ],
            "description": "Adds CORS mapping rules to a registry, allowing specific origins, methods, headers, and credentials for a given resource.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a CorsRegistry object with mapping rules for cross-origin resource sharing.\n\n* `registry`: The Cors registry that is being modified by adding mapping rules for cross-origin resource sharing (CORS).\n* `allowedOrigins`: A list of origins that are allowed to access the resources.\n* `allowedMethods`: A list of HTTP methods that are allowed to be used when accessing the resources.\n* `allowedHeaders`: A list of headers that are allowed to be used when accessing the resources.\n* `exposedHeaders`: A list of headers that are exposed to the client.\n* `allowCredentials`: Whether credentials (e.g., cookies, authorization headers) are allowed or not.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Configuration\n public class WebConfig extends CorsConfig {\n    @Override\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return super.corsConfigurer();\n    }\n}\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "location": {
              "start": 28,
              "insert": 14,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 13,
                "end": 27
              }
            },
            "item_type": "method",
            "length": 23,
            "docLength": 14
          },
          {
            "id": "a670e7e3-5ec9-c2bf-9341-d4e074ff2529",
            "ancestors": [
              "fd1d77a9-9ef1-ae8d-1449-c5b5b69b3995",
              "ecdab47f-6b1e-a292-ed4e-8508fb8e4eb0"
            ],
            "description": "Adds mapping to CORS registry, allowing requests from any origin and specifying allowed methods, headers, and credentials.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry to which the mappings are being added.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "public class MyController {\n    @Autowired\n    private CorsConfig corsConfig;\n\n    @GetMapping(\"/test\")\n    public String test() {\n        return \"Hello World!\";\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        // Create a new application context with the CorsConfig bean defined\n        AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n        ctx.registerBean(CorsConfig.class);\n        ctx.refresh();\n\n        // Obtain an instance of the MyController class and call its test method\n        MyController myController = ctx.getBean(MyController.class);\n        String response = myController.test();\n        System.out.println(\"Response: \" + response);\n    }\n}\n",
              "description": ""
            },
            "name": "addCorsMappings",
            "location": {
              "start": 40,
              "insert": 33,
              "offset": " ",
              "indent": 6,
              "comment": {
                "start": 32,
                "end": 39
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 7
          }
        ]
      }
    }
  }
]