[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A Spring Boot configuration class called CorsConfig that enables Cross-Origin Resource Sharing (CORS) for an application. The class uses the @Configuration annotation and the @Bean annotation to define a WebMvcConfigurer that adds CORS mappings to the registry. The allowedOrigins, allowedMethods, allowedHeaders, and exposedHeaders are set to specific values, and the allowCredentials property is set to true. This allows the application to accept requests from specified origins, methods, headers, and credentials.",
        "items": [
          {
            "id": "ca5344f2-a2bd-2e82-f247-99cb69af20cd",
            "ancestors": [],
            "type": "function",
            "description": "Is used to configure Cross-Origin Resource Sharing (CORS) settings for a Spring Web application. The class allows origins to access resources by specifying allowed origins, methods, headers, and credentials. The addCorsMappings method adds the CORS mapping to the registry, allowing all origins to access all resources with allowed methods, headers, and credentials.",
            "name": "CorsConfig",
            "length": 22,
            "location": {
              "start": 9,
              "insert": 9,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "docLength": null
          },
          {
            "id": "2e6157ba-dfcf-e489-a547-9535c341a83f",
            "ancestors": [
              "ca5344f2-a2bd-2e82-f247-99cb69af20cd"
            ],
            "type": "function",
            "description": "Configures CORS (Cross-Origin Resource Sharing) settings for a web application. It adds mappings to allow cross-origin requests from specified origins, methods, headers, and credentials.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a set of CORS mappings that allow requests from specified origins and methods, and expose specific headers.\n\n* `allowedOrigins`: an array of URLs that are allowed to make requests to the server.\n* `allowedMethods`: an array of HTTP methods (such as GET, POST, PUT, DELETE) that are allowed to be used in CORS requests.\n* `allowedHeaders`: an array of headers that are allowed to be included in CORS responses.\n* `exposedHeaders`: an array of headers that are exposed in CORS responses.\n* `allowCredentials`: a boolean indicating whether credentials (such as cookies, authorization tokens) should be included in CORS responses.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Configuration\npublic class AppConfig {\n  @Value(\"${server.cors.allowedOrigins}\")\n  private String[] allowedOrigins;\n  \n  @Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n}\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "length": 16,
            "location": {
              "start": 14,
              "insert": 14,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "docLength": null
          },
          {
            "id": "f511207d-9062-1bb2-3f46-f75ad2582eec",
            "ancestors": [
              "ca5344f2-a2bd-2e82-f247-99cb69af20cd",
              "2e6157ba-dfcf-e489-a547-9535c341a83f"
            ],
            "type": "function",
            "description": "Adds CORS mappings to a registry, allowing specified origins, methods, headers, and credentials for a given resource.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "CorsRegistry object that the method adds mappings to.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n    public void addCorsMappings(CorsRegistry registry) {\n        // Allow all origins for this mapping\n        registry.addMapping(\"/**\").allowedOrigins(\"*\");\n    }\n",
              "description": "\nIn this example, the method `addCorsMappings` is being used to add a CORS mapping for an endpoint that allows all origins (`*`)."
            },
            "name": "addCorsMappings",
            "length": 9,
            "location": {
              "start": 19,
              "insert": 19,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "method",
            "docLength": null
          }
        ]
      }
    }
  }
]