[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A configuration class for cross-origin resource sharing (CORS) using Spring WebMvcConfigurer. The class has a single method, `addCorsMappings()`, which adds mappings to a registry allowing requests from any origin and specifying allowed methods, headers, and credentials.",
        "items": [
          {
            "id": "cd31a468-00b2-e697-674c-83b6b441c5ef",
            "ancestors": [],
            "description": "Defines a configuration class for cross-origin resource sharing (CORS) using Spring WebMvcConfigurer. The class adds mappings to a registry allowing requests from any origin and specifying allowed methods, headers, and credentials.",
            "name": "CorsConfig",
            "location": {
              "start": 14,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 7,
                "end": 13
              }
            },
            "item_type": "class",
            "length": 48,
            "docLength": 6
          },
          {
            "id": "b082fe73-562e-c688-6840-9a13ed029ddc",
            "ancestors": [
              "cd31a468-00b2-e697-674c-83b6b441c5ef"
            ],
            "description": "Adds CORS mappings to a registry, allowing specified origins to make requests to the server with specific methods and headers, while also exposing two custom headers.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a configuration for CORS mapping that allows requests from specified origins with specific methods and headers, while also exposing two custom headers.\n\n* The function returns an instance of `WebMvcConfigurer`, which is a subclass of `AbstractConfigurer`.\n* The function adds CORS mappings to a registry using the `addCorsMappings()` method.\n* The mappings allow requests from any origin, with any HTTP method and header, while exposing two custom headers (\"token\" and \"userId\").\n* The `allowedCredentials` parameter is set to `true`, indicating that credentials (e.g., cookies, authorization headers) are allowed for CORS requests.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Bean\npublic WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n        @Override\n        public void addCorsMappings(CorsRegistry registry) {\n            registry.addMapping(\"/**\")\n                .allowedOrigins(allowedOrigins)\n                .allowedMethods(\"*\")\n                .allowedHeaders(\"*\")\n                .exposedHeaders(\"token\", \"userId\")\n                .allowCredentials(true);\n        }\n    };\n}\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "location": {
              "start": 39,
              "insert": 19,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 18,
                "end": 38
              }
            },
            "item_type": "method",
            "length": 22,
            "docLength": 20
          },
          {
            "id": "744ae998-c75a-ab9b-ff44-5fbfd901e428",
            "ancestors": [
              "cd31a468-00b2-e697-674c-83b6b441c5ef",
              "b082fe73-562e-c688-6840-9a13ed029ddc"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin and specifying allowed methods, headers, and credentials.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry that is being updated with the mapping configurations.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n  public void addCorsMappings(CorsRegistry registry) {\n    // This allows requests from any origin to make POST, GET, and PUT requests with specific headers.\n    // Exposed headers are token and userId, and credentials are allowed to be included in the request.\n    registry.addMapping(\"/**\")\n        .allowedOrigins(allowedOrigins)\n        .allowedMethods(\"POST\", \"GET\", \"PUT\")\n        .allowedHeaders(\"token\", \"userId\")\n        .exposedHeaders(\"token\", \"userId\")\n        .allowCredentials(true);\n  }\n",
              "description": ""
            },
            "name": "addCorsMappings",
            "location": {
              "start": 50,
              "insert": 44,
              "offset": " ",
              "indent": 6,
              "comment": {
                "start": 43,
                "end": 49
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 6
          }
        ]
      }
    }
  }
]