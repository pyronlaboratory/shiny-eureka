[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A `CorsConfig` class that configures CORS settings for a Spring Web MVC application. The configuration adds mapping for CORS requests to allow origins, methods, headers, and credentials. Specifically, the allowed origins are specified in an @Value annotation, while the remaining settings are defined using method chaining.",
        "items": [
          {
            "id": "b48710b8-c54e-ee8b-af40-d12cef468690",
            "ancestors": [],
            "description": "Is used to configure Cross-Origin Resource Sharing (CORS) settings for a Spring Web MVC application. The class provides a mapping of allowed origins, methods, headers, and credentials for the application.",
            "name": "CorsConfig",
            "location": {
              "start": 8,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 20,
            "docLength": null
          },
          {
            "id": "7439c852-e4dd-909b-8c4d-4a165f8a796f",
            "ancestors": [
              "b48710b8-c54e-ee8b-af40-d12cef468690"
            ],
            "description": "Configures Cross-Origin Resource Sharing (CORS) settings for a web application. It adds mappings to allow incoming requests from specified origins, methods, headers, and credentials.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a configuration for CORS (Cross-Origin Resource Sharing) that allows requests from any origin to be made to the server.\n\n* `allowedOrigins`: an array of origins that are allowed to make requests to the application.\n* `allowedMethods`: an array of HTTP methods that are allowed for making requests from authorized origins.\n* `allowedHeaders`: an array of headers that are allowed for making requests from authorized origins.\n* `exposedHeaders`: an array of headers that are exposed in responses to authorized origins.\n* `allowCredentials`: a boolean indicating whether credentials (e.g., authentication tokens) should be included in allowed requests.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Configuration\npublic class MyConfig {\n  @Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n}\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "location": {
              "start": 13,
              "insert": 13,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 14,
            "docLength": null
          },
          {
            "id": "ced8cd92-795c-ff8f-304a-09a04c98b2ae",
            "ancestors": [
              "b48710b8-c54e-ee8b-af40-d12cef468690",
              "7439c852-e4dd-909b-8c4d-4a165f8a796f"
            ],
            "description": "Adds CORS mappings to a registry, allowing incoming requests from any origin and specifying allowed HTTP methods, headers, and credentials.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry that is being updated with the mapping configuration.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n",
              "description": "\nIn this example, the method is called addCorsMappings and it has a single parameter named registry of type CorsRegistry. The method then adds a mapping to the cors registry by calling the addMapping method on the registry object with the value \"**\" as its argument. The method also specifies that all origins are allowed, all methods are allowed, all headers are allowed, and credentials are allowed."
            },
            "name": "addCorsMappings",
            "location": {
              "start": 16,
              "insert": 16,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "method",
            "length": 9,
            "docLength": null
          }
        ]
      }
    }
  }
]