[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A `CorsConfig` class that configures Cross-Origin Resource Sharing (CORS) for a Spring MVC web application. The configuration sets allowed origins, methods, and headers for CORS requests, and also enables credentials in the response. The `WebMvcConfigurer` interface is implemented to add CORS mappings to the registry.",
        "items": [
          {
            "id": "64aa2601-3049-b98e-854f-5c9969e1d273",
            "ancestors": [],
            "type": "function",
            "description": "Is configured to enable Cross-Origin Resource Sharing (CORS) for the server. The class provides an array of allowed origins and allows all methods, headers, and credentials.",
            "name": "CorsConfig",
            "length": 23,
            "location": {
              "start": 8,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "docLength": null
          },
          {
            "id": "89913415-9908-df97-0b4c-c68c828545f0",
            "ancestors": [
              "64aa2601-3049-b98e-854f-5c9969e1d273"
            ],
            "type": "function",
            "description": "Configures CORS settings for a web application, allowing incoming requests from specified origins, methods, and headers, while also exposing certain headers and enabling credentials.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a configuration for enabling CORS (Cross-Origin Resource Sharing) on a web application, allowing requests from specified origins and methods, as well as including specific headers and credentials.\n\n* `allowedOrigins`: An array of origins allowed to access the server's resources.\n* `allowedMethods`: An array of HTTP methods allowed to be used by the origins listed in `allowedOrigins`.\n* `allowedHeaders`: An array of request headers allowed to be used by the origins listed in `allowedOrigins`.\n* `exposedHeaders`: An array of response headers that are exposed to origins listed in `allowedOrigins`.\n* `allowCredentials`: Whether credentials (e.g., authentication bearer tokens) should be allowed for the origins listed in `allowedOrigins`.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Configuration\npublic class CorsConfig {\n \n  @Value(\"${server.cors.allowedOrigins}\")\n  private String[] allowedOrigins;\n  \n  @Bean\n  public WebMvcConfigurer corsConfigurer() {\n\n  \n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n}\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "length": 16,
            "location": {
              "start": 14,
              "insert": 14,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "docLength": null
          },
          {
            "id": "ab6fdfb4-81cb-7780-c240-2cb3427ee77a",
            "ancestors": [
              "64aa2601-3049-b98e-854f-5c9969e1d273",
              "89913415-9908-df97-0b4c-c68c828545f0"
            ],
            "type": "function",
            "description": "Adds CORS mappings to a registry, allowing requests from any origin, method, and header, and exposing certain headers with credentials enabled.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry that the method adds mappings to.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\npublic void addCorsMappings(CorsRegistry registry) {\n    registry.addMapping(\"/**\")\n        .allowedOrigins(new String[] {\"http://www.example.com\"})\n        .allowedMethods(\"*\")\n        .allowedHeaders(\"*\")\n        .exposedHeaders(\"token\", \"userId\")\n        .allowCredentials(true);\n}\n",
              "description": "\nThis code would allow all HTTP requests from the given origin to access the application with the defined allowed methods, allowed headers and exposed headers."
            },
            "name": "addCorsMappings",
            "length": 9,
            "location": {
              "start": 19,
              "insert": 19,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "method",
            "docLength": null
          }
        ]
      }
    }
  }
]