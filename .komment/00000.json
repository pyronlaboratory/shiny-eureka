[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A Spring configuration class called `CorsConfig` that enables Cross-Origin Resource Sharing (CORS) for a web application. The class sets the allowed origins, methods, headers, and credentials in the CORS registry using the `@Bean` annotation. The `WebMvcConfigurer` interface is implemented to add the CORS mappings to the registry. The code also uses the `@Value` annotation to retrieve a String array of allowed origins from an external configuration file.",
        "items": [
          {
            "id": "dbf96040-4ce4-8d98-3040-09cde9b006b5",
            "ancestors": [],
            "type": "function",
            "description": "Is annotated with Spring's @Configuration annotation and defines a WebMvcConfigurer bean that configures Cross-Origin Resource Sharing (CORS) for the server. The class has two main components: the allowedOrigins field, which is annotated with `@Value`, and the corsConfigurer() method, which is annotated with `@Bean`. The addCorsMappings() method within the corsConfigurer() method allows CORS configurations for all routes (\"/**\") by specifying allowed origins, methods, headers, and credentials.",
            "name": "CorsConfig",
            "length": 22,
            "location": {
              "start": 10,
              "insert": 10,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "docLength": null
          },
          {
            "id": "dd57ad09-02af-b9bc-b84c-cc30de5db8a0",
            "ancestors": [
              "dbf96040-4ce4-8d98-3040-09cde9b006b5"
            ],
            "type": "function",
            "description": "Defines CORS mappings for a web application, allowing requests from any origin and specifying which methods, headers, and credentials are allowed.",
            "params": [],
            "returns": {
              "type_name": "instance",
              "description": "a configuration for CORS (Cross-Origin Resource Sharing) that allows requests from any origin to access resources on the server.\n\n* `allowedOrigins`: An array of origins that are allowed to make requests to the server.\n* `allowedMethods`: An array of HTTP methods that are allowed to be used in requests from the allowed origins.\n* `allowedHeaders`: An array of header fields that are allowed to be used in requests from the allowed origins.\n* `exposedHeaders`: An array of header fields that are exposed in responses from the server to the allowed origins.\n* `allowCredentials`: A boolean value indicating whether credentials (e.g., authentication information) should be included in requests from the allowed origins.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class MyAppConfig {\n\n  @Value(\"${server.cors.allowedOrigins}\")\n  private String[] allowedOrigins;\n  \n  @Bean\n  public WebMvcConfigurer corsConfigurer() {\n    return new WebMvcConfigurer() {\n      @Override\n      public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(allowedOrigins)\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n      }\n    };\n  }\n}\n",
              "description": "\nThe MyAppConfig class uses the corsConfigurer method to set up CORS configuration for Spring MVC. The allowedOrigins variable is initialized with a list of origins that are permitted to make cross-origin requests. The addCorsMappings method adds a new mapping for all incoming requests, allowing these origins and enabling the other CORS settings specified in the example. Finally, the corsConfigurer method returns the WebMvcConfigurer object with the configured CORS settings."
            },
            "name": "corsConfigurer",
            "length": 16,
            "location": {
              "start": 15,
              "insert": 15,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "docLength": null
          },
          {
            "id": "64e78da4-0cd0-a59b-0546-d81f36e861cf",
            "ancestors": [
              "dbf96040-4ce4-8d98-3040-09cde9b006b5",
              "dd57ad09-02af-b9bc-b84c-cc30de5db8a0"
            ],
            "type": "function",
            "description": "Adds CORS mappings to a registry, allowing all origins and methods, as well as specific headers and credentials.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry that the method adds mappings to.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "import com.myhome.configuration.CorsConfig;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\npublic class CorsExample {\n  public static void main(String[] args) {\n    WebMvcConfigurer config = new CorsConfig();\n    CorsRegistry registry = new CorsRegistry();\n    config.addCorsMappings(registry);\n  }\n}\n",
              "description": ""
            },
            "name": "addCorsMappings",
            "length": 9,
            "location": {
              "start": 20,
              "insert": 20,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "method",
            "docLength": null
          }
        ]
      }
    }
  }
]