[
  {
    "name": "_test_0.java",
    "path": "_test_0.java",
    "content": {
      "structured": {
        "description": "A `CorsConfig` class that configures Cross-Origin Resource Sharing (CORS) settings for a Spring Web MVC application. The class provides mappings to allow incoming requests from specified origins, methods, headers, and credentials. Specifically, it allows requests from any origin and specifies allowed HTTP methods, headers, and credentials in the mapping configuration.",
        "items": [
          {
            "id": "5eb18fa2-40b1-a1aa-1842-6a8edef93de8",
            "ancestors": [],
            "description": "Is used to configure Cross-Origin Resource Sharing (CORS) settings for a Spring Web MVC application. The class provides a mapping of allowed origins, methods, headers, and credentials for the application.",
            "name": "CorsConfig",
            "location": {
              "start": 13,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 7,
                "end": 12
              }
            },
            "item_type": "class",
            "length": 45,
            "docLength": 5
          },
          {
            "id": "6a5c988c-4321-00ab-3342-2c97814d6809",
            "ancestors": [
              "5eb18fa2-40b1-a1aa-1842-6a8edef93de8"
            ],
            "description": "Adds CORS mappings to a registry, allowing incoming requests from any origin and specifying allowed HTTP methods, headers, and credentials.",
            "params": [],
            "returns": {
              "type_name": "WebMvcConfigurer",
              "description": "a mapping configuration for CORS that allows incoming requests from any origin and specifies allowed HTTP methods, headers, and credentials.\n\n* `registry`: The Cors registry that is being updated with the mapping configuration.\n* `allowedOrigins`: An array of allowed origins for incoming requests.\n* `allowedMethods`: An array of allowed HTTP methods for incoming requests.\n* `allowedHeaders`: An array of allowed headers for incoming requests.\n* `exposedHeaders`: An array of headers that can be exposed in responses.\n* `allowCredentials`: A boolean indicating whether credentials (e.g., authentication tokens) are allowed or not.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Configuration\npublic class CorsConfig {\n    @Value(\"${server.cors.allowedOrigins}\")\n    private String[] allowedOrigins;\n  \n  /**\n   * Configures Cross-Origin Resource Sharing (CORS) settings for a web application.\n   * It adds mappings to allow incoming requests from specified origins, methods,\n   * headers, and credentials.\n   * \n   * @returns a configuration for CORS (Cross-Origin Resource Sharing) that allows\n   * requests from any origin to be made to the server.\n   */\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return new WebMvcConfigurer() {\n            /**\n             * Adds CORS mappings to a registry, allowing incoming requests from any origin and\n             * specifying allowed HTTP methods, headers, and credentials.\n             * \n             * @param registry Cors registry that is being updated with the mapping configuration.\n             */\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping(\"/**\")\n                        .allowedOrigins(allowedOrigins)\n                        .allowedMethods(\"*\")\n                        .allowedHeaders(\"*\")\n                        .exposedHeaders(\"token\", \"userId\")\n                        .allowCredentials(true);\n            }\n        };\n    }\n}\n",
              "description": ""
            },
            "name": "corsConfigurer",
            "location": {
              "start": 37,
              "insert": 18,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 17,
                "end": 36
              }
            },
            "item_type": "method",
            "length": 20,
            "docLength": 19
          },
          {
            "id": "4c0f14b9-2982-5b83-cd45-f7bb5f28cf0d",
            "ancestors": [
              "5eb18fa2-40b1-a1aa-1842-6a8edef93de8",
              "6a5c988c-4321-00ab-3342-2c97814d6809"
            ],
            "description": "Adds CORS mappings to a registry, allowing requests from any origin and specifying allowed methods, headers, and credentials.",
            "params": [
              {
                "name": "registry",
                "type_name": "CorsRegistry",
                "description": "Cors registry that the method adds mappings to.",
                "complex_type": false
              }
            ],
            "usage": {
              "language": "java",
              "code": "@Override\npublic void configure(WebMvcConfigurerRegistry registry) {\n    //Add CORS mappings to a registry, allowing incoming requests from any origin and specifying allowed HTTP methods, headers, and credentials.\n    registry.addMapping(\"/**\")\n            .allowedOrigins(\"*\")\n            .allowedMethods(\"GET\", \"POST\", \"PUT\", \"DELETE\")\n            .allowedHeaders(\"*\")\n            .exposedHeaders(\"token\", \"userId\")\n            .allowCredentials(true);\n}\n",
              "description": "\nThe above example adds CORS mappings to the registry, allowing incoming requests from any origin and specifying allowed HTTP methods, headers, and credentials."
            },
            "name": "addCorsMappings",
            "location": {
              "start": 46,
              "insert": 40,
              "offset": " ",
              "indent": 6,
              "comment": {
                "start": 39,
                "end": 45
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 6
          }
        ]
      }
    }
  }
]